" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"   This is the personal .vimrc file of Stephen Tudor.
"   It extends and customizes the .vimrc provided by spf13.
"
"   For more information on how this type of Vim configuration works: http://spf13.com
" }

" General {

    set fileformats+=mac            " Add mac to fileformats
    set isk+=_,$,@,%,#,-            " None word dividers
    " set viminfo='1000,f1,:100,@100,/20
    set modeline                    " Make sure modeline support is enabled
    set autoread                    " Reload the files if they changed on disk
    set timeout
    set timeoutlen=500              " Timeout between key codes
    set ttimeoutlen=100             " Timeout on mapping

" }

" Vim UI {

    set background=light
    color solarized                 " Load a colorscheme

    set nolazyredraw                " Don't redraw while executing macros
    set complete-=i                 " Don't scan current and included files for keywords

    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*        " Version control
    set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg   " binary images
    set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest " compiled object files
    set wildignore+=*.pyc                            " Python byte code
    set wildignore+=*.spl                            " compiled spelling word lists
    set wildignore+=*.sw?                            " Vim swap files
    set wildignore+=*.DS_Store
    set wildignore+=*CACHE
    set wildignore+=*/node_modules/*
    set wildignore+=*/dist/*

    set cmdheight=2                 " Command line height
    set report=0                    " Tell us about changes
    set scrolloff=1                 " Minimum lines to keep above and below cursor
    set sidescrolloff=5             " Minimum columns to keep left and right of the cursor
    set listchars+=eol:Â¬            " Show eol chars
    set synmaxcol=2048              " Syntax coloring too-long lines is slow

    if has('autocmd')

        " Keep splits sized properly
        au VimResized * exe "normal! \<cw>="

        "" Open help files in a vertical split
        au BufWinEnter *.txt if &ft == 'help' | wincmd L | endif

    endif

" }

" Formatting {

    set shiftround                  " Round indents to multiple of shiftwidth
    set nrformats-=octal            " Don't evaluate octal values as numbers
    set formatoptions+=n            " Support for numbered/bullet lists

    if has('autocmd')

        " Syntax of these languages is fussy over tabs vs spaces
        au FileType make       setlocal ts=4 sts=4 sw=4 noet
        au FileType yaml,haml  setlocal ts=2 sts=2 sw=2 et

        " Whitespace based on house-style (arbitrary)
        au FileType javascript setlocal ts=4 sts=4 sw=4 et
        au FileType coffee     setlocal ts=2 sts=2 sw=2 et
        au FileType stylus     setlocal ts=2 sts=2 sw=2 et
        au FileType sass       setlocal ts=2 sts=2 sw=2 et
        au FileType scss       setlocal ts=4 sts=4 sw=4 et
        au FileType less       setlocal ts=4 sts=4 sw=4 et
        au FileType ruby       setlocal ts=2 sts=2 sw=2 et

        "" JavaScript
        au BufNewFile,BufRead *.json setlocal ft=javascript         " Syntax highlighting for JSON files

        "" CoffeeScript
        au BufNewFile,BufRead *.cson setlocal ft=coffee             " Syntax highlighting for CSON files

        "" JSP
        au BufNewFile,BufRead *.jspf setlocal ft=jsp                " Syntax highlighting for JSPF files

        "" Python
        highlight OverLength ctermbg=red ctermfg=white guibg=#592929
        au FileType python setlocal ts=4 sts=4 sw=4 et              " make python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
        au FileType python match OverLength /\%79v.\+/

        "" PHP
        au BufNewFile,BufRead *.ctp setlocal ft=php                 " set .ctp files to edit like php for cakePHP

        "" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
        au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} setlocal ft=ruby

        "" Markdown -- markdown, md, mk, mkd, pdk, pandoc, and text are markdown and define buffer-local preview
        au FileType markdown,md,mk,mkd,pdk,pandoc,text nnoremap <buffer> <localleader>1 yypVr=
        au FileType markdown,md,mk,mkd,pdk,pandoc,text nnoremap <buffer> <localleader>2 yypVr-

        "" reStructuredText
        au FileType rst nnoremap <buffer> <localleader>1 yypVr=
        au FileType rst nnoremap <buffer> <localleader>2 yypVr-
        au FileType rst nnoremap <buffer> <localleader>3 yypVr~
        au FileType rst nnoremap <buffer> <localleader>4 yypVr`

        " Generally format text files, but if a long line has been created leave it alone when editing:
        au FileType markdown,md,mk,mkd,pdk,pandoc,rst,text setlocal fo+=tl

    endif

" }

" Mappings {

    noremap <down> gj
    noremap <up> gk

    " Remap <f1> to <esc> to accommodate my fat-fingering ways
    imap <f1> <esc>
    vmap <f1> <esc>

    " Do not attempt to display manual
    nnoremap K <nop>

    " Press space bar to turn off search highlighting and clear any message displayed
    nnoremap <silent> <Space> :nohl<Bar>:echo<CR>

    " Substitute
    nnoremap <leader>s :%s//g<left><left>

    " Uppercase
    nnoremap <C-u> gUiw
    inoremap <C-u> <esc>gUiwea

    " Reflow paragraph with Q in normal and visual mode
    nnoremap Q gqap
    vnoremap Q gq

    " Retab a source file
    nmap <leader>rr :retab!<CR>

    " Remove the Windows ^M - when the encodings gets messed up
    noremap <leader>M mmHmt:%s/<C-V><CR>//ge<CR>'tzt'm

    " Toggle whitespace characters
    nmap <leader>l :set list!<CR>

    " Create window splits easier. The default map is Ctrl-w,v and Ctrl-w,s.
    nnoremap <silent> vv <C-w>v
    nnoremap <silent> ss <C-w>s

    " Delete all entered characters on the current line, non-undoable
    inoremap <C-U> <C-G>u<C-U>

" }

" Plugins {

    " ctrlp {
        nnoremap <leader>t :CtrlP<CR>
        nnoremap <leader>b :CtrlPBuffer<CR>
        nnoremap <leader>r :CtrlPMRU<CR>
        nmap <leader>f :ClearCtrlPCache<CR>
    " }

    " Gist {

        let g:gist_clip_command = 'pbcopy'
        let g:gist_detect_filename = 1
        let g:gist_open_browser_after_post = 1
        let g:gist_post_private = 1

    " }

    " neocomplcache {

        let g:neocomplcache_temporary_dir = '$HOME/.neocomplcache'

    " }

    " NERDCommenter {

        let NERDSpaceDelims = 1
        map <leader>/ <plug>NERDCommenterToggle

    " }

    " Syntastic {

        let g:syntastic_mode_map = { 'mode': 'passive',
                                   \ 'active_filetypes': ['php', 'javascript'],
                                   \ 'passive_filetypes': ['less', 'sass', 'scss', 'css', 'html', 'ruby'] }

        "mark syntax errors with :signs
        let g:syntastic_enable_signs = 1

        "automatically jump to the error when saving the file
        let g:syntastic_auto_jump = 0

        "show the error list automatically
        let g:syntastic_auto_loc_list = 1

        "don't care about warnings
        let g:syntastic_quiet_messages = { 'level': 'warnings' }

    " }

    " Unimpaired {
        " bubble single and multiple lines
        nmap <leader><up> [e
        nmap <leader><down> ]e
        vmap <leader><up> [egv
        vmap <leader><down> ]egv
    " }

" }
